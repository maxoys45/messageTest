@import url("https://fonts.googleapis.com/css?family=Roboto:400,500,700");
@font-face {
  font-family: 'icomoon';
  src: url("../fonts/icomoon.eot?8e470n");
  src: url("../fonts/icomoon.eot?8e470n#iefix") format("embedded-opentype"), url("../fonts/icomoon.ttf?8e470n") format("truetype"), url("../fonts/icomoon.woff?8e470n") format("woff"), url("../fonts/icomoon.svg?8e470n#icomoon") format("svg");
  font-weight: normal;
  font-style: normal; }

.icon-arrow-right, .btn--default:after, .form__submit:after {
  content: "\e900"; }

/* @keyframes duration | timing-function | delay |
   iteration-count | direction | fill-mode | play-state | name

EG: animation: 3s ease-in 1s 2 reverse both paused slidein; */
/* WRAP */
/* ELLIP */
/* TRANSITIONS */
/* BREAK POINTS */
/* -- min-width by default
   -- if 2nd parameter is 'max-width', max-width used instead
   -- if $until is added, $point becomes min-width and $until is max-width */
/* LIST MARGINS */
/* CALC */
/* FLEXBOX */
/* ------------------------------------------------------
 * FLEXBOX MIXIN
 * ------------------------------------------------------
 * @desc  Let's you create flexbox container and item css with 2 mixins

 * @usage
 *
 *    @include flexbox-container(
 *
 *        $display : flex,        [flex / inline]
 *        $direction : row,       [row / row-reverse / column / column-reverse]
 *        $wrap : nowrap,         [nowrap / wrap / wrap-reverse]
 *        $justify : start,       [start / end / center / between / around]
 *        $alignContent : start,  [start / end / center / between / around / stretch]
 *        $alignItems : center     [start / end / center / baseline / stretch]
 *
 *    );
 *
 *
 *    @include flexbox-item(
 *
 *        $order : null,          [integer] -- custom order of items
 *        $grow : 0,              [0 / 1]
 *        $shrink : 1,            [0 / 1]
 *        $basis : auto,          [auto / <length>]
 *        $alignSelf : auto       [auto / start / end / center / baseline / stretch]
 *
 *    );
 *
 * @author maxoys45
 * @version 0.1
 * ------------------------------------------------------ */
/* ASPECT RATIO */
/* HARDWARE ACCEL */
/* CENTRED CONTENT */
/* TARGET IE10+ */
/* BG IMAGE SVG WITH PNG FALLBACK */
/* ANIMATED PNG */
/* Mixin to replicate an animated GIF using Keyframes and a PNG Sprite image.

	$numberOfSteps 	= the number of frames to step between (no limit to number of steps)
	$animName 		= purely used as the animation name to avoid duplicate animations
	$imageSize 		= the width or height of the PNG image which needs to be shown in each frame
	$duration 		= the total time for the animation in seconds
	$playCount		= the way the animation is played (linear, infinite, inout)

	** requires auto-prefixer to support all modern browsers
	** Requires 'compass/css3' */
/* example use */
.animatedImage {
  -webkit-animation: YES_WE_CAN 1s 2 forwards;
          animation: YES_WE_CAN 1s 2 forwards;
  /* places the keyframes animation outside of the selector */
  background-image: url("http://www.maxhenchman.co.uk/random/123test.png");
  background-repeat: no-repeat;
  background-color: #FF0000;
  display: block;
  width: 100px;
  height: 100px;
  overflow: hidden;
  margin: 20px auto; }

@-webkit-keyframes YES_WE_CAN {
  0% {
    background-position: 0 0; }
  20% {
    background-position: -0px 0; }
  20.0001% {
    background-position: -100px 0; }
  40% {
    background-position: -100px 0; }
  40.0001% {
    background-position: -200px 0; }
  60% {
    background-position: -200px 0; }
  60.0001% {
    background-position: -300px 0; }
  80% {
    background-position: -300px 0; }
  80.0001% {
    background-position: -400px 0; }
  100% {
    background-position: -400px 0; } }

@keyframes YES_WE_CAN {
  0% {
    background-position: 0 0; }
  20% {
    background-position: -0px 0; }
  20.0001% {
    background-position: -100px 0; }
  40% {
    background-position: -100px 0; }
  40.0001% {
    background-position: -200px 0; }
  60% {
    background-position: -200px 0; }
  60.0001% {
    background-position: -300px 0; }
  80% {
    background-position: -300px 0; }
  80.0001% {
    background-position: -400px 0; }
  100% {
    background-position: -400px 0; } }

/* http://meyerweb.com/eric/tools/css/reset/
   v2.0 | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

*, *:before, *:after {
  box-sizing: border-box; }

input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
  -webkit-appearance: none;
          appearance: none;
  margin: 0; }

html {
  line-height: 1;
  font-size: 10px; }

body {
  font-family: "Roboto", sans-serif; }

input, button, select, textarea, optgroup, option {
  font-family: inherit;
  font-size: inherit;
  font-style: inherit;
  font-weight: inherit;
  color: inherit; }

.stripInput, .btn--default, .form__submit {
  border: none;
  background: none;
  padding: 0;
  cursor: pointer;
  outline: none; }

h1, h2, h3, h4 {
  line-height: 1.3;
  color: #475e86; }

h1 {
  font-size: 4.8em;
  margin-bottom: .8em; }

h2 {
  font-size: 4em;
  margin-bottom: .2em; }

h3 {
  font-size: 2.1em;
  margin-bottom: .5em; }

h4 {
  font-size: 1.4em;
  margin-bottom: .5em; }

a, button, input, textarea {
  outline: none; }

p {
  line-height: 1.3;
  font-size: 1.4rem;
  margin-bottom: 1em; }
  p:last-of-type {
    margin-bottom: 0; }
  p a {
    font-weight: 400; }
  @media screen and (min-width: 480px) {
    p {
      font-size: 1.6rem; } }

.anchor, p a, .btn__logout {
  font-size: 1.4rem;
  line-height: 1.3;
  color: #4a90e4;
  outline: none;
  text-decoration: none; }

a {
  text-decoration: none;
  color: inherit; }

img {
  display: block;
  max-width: 100%; }

strong {
  font-weight: 500; }

.hidden {
  display: none; }

.required {
  color: #ed0000; }

.input--default, .form__input, .form__textarea {
  display: inline-block;
  vertical-align: middle;
  border: 1px solid #d5d5d5;
  background: #FFFFFF;
  padding: 1rem;
  font-size: 1.4rem;
  outline: none;
  color: #475e86;
  text-align: left;
  position: relative;
  min-width: 150px;
  line-height: 1.3;
  text-decoration: none; }
  .input--default:hover, .form__input:hover, .form__textarea:hover {
    color: inherit; }

.btn--default, .form__submit {
  display: inline-block;
  vertical-align: middle;
  transition: all 0.2s ease-in-out;
  letter-spacing: 1px;
  color: #FFFFFF;
  line-height: 1;
  font-weight: 700;
  font-size: 1.6rem;
  text-transform: uppercase;
  background-color: #1fba97;
  border-bottom: 2px solid #188e74;
  padding: 1.2rem 1.4rem; }
  .btn--default:after, .form__submit:after {
    font-family: 'icomoon' !important;
    speak: none;
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    text-transform: none;
    line-height: 1;
    /* Better Font Rendering =========== */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    font-size: 1.3rem;
    margin-left: .7rem; }
  .btn--default:hover, .form__submit:hover, .btn--default:focus, .form__submit:focus, .btn--default:active, .form__submit:active {
    border-color: #106350;
    background-color: #14c59d; }

.btn--secondary, .form__cancel {
  display: inline-block;
  vertical-align: middle;
  transition: all 0.2s ease-in-out;
  color: #475e86;
  line-height: 1;
  font-size: 1.4rem;
  padding: 1.2rem 1.4rem;
  font-weight: 500;
  border: 2px solid #475e86; }
  .btn--secondary:hover, .form__cancel:hover, .btn--secondary:focus, .form__cancel:focus, .btn--secondary:active, .form__cancel:active {
    background-color: #FFFFFF; }

.hiddenInputs {
  width: 0.1px;
  height: 0.1px;
  opacity: 0;
  overflow: hidden;
  position: absolute;
  z-index: -1; }

.justify {
  text-align: justify; }

.wrapped {
  max-width: 1020px;
  margin-left: auto;
  margin-right: auto; }

iframe {
  width: 100%; }

.float--left {
  float: left; }

.float--right {
  float: right; }

/* MAIN STYLES */
body {
  font-family: "Roboto", sans-serif;
  line-height: 1;
  color: #475e86;
  background: #f4f6f7; }

.allContent {
  height: 100%;
  padding: 3rem;
  max-width: 76.8rem; }
  .allContent .inside {
    position: relative; }

.btn__logout {
  position: absolute;
  top: 0;
  right: 0; }

.form__group {
  margin-bottom: 2rem; }
  .form__group:last-of-type {
    margin-bottom: 0; }

.form__label {
  font-weight: 500;
  display: block;
  margin-bottom: .5rem;
  font-size: 1.4rem; }

.form__input, .form__textarea {
  width: 100%; }

.form__textarea {
  resize: none; }

.alert, .help-block {
  padding: 1rem;
  font-size: 1.2rem;
  margin-bottom: 1rem;
  border-radius: .4rem; }
  .alert.success, .success.help-block {
    background: rgba(31, 186, 151, 0.3); }
  .alert.error, .help-block {
    background: rgba(237, 0, 0, 0.3); }

.help-block {
  margin-top: 1rem; }

.login__container {
  max-width: 48rem; }

.notes__container, .note__content {
  background-color: #FFFFFF;
  padding: 1rem;
  box-shadow: 0 0.1rem 0.2rem rgba(0, 0, 0, 0.2);
  border-radius: 0.4rem; }

.notes__table {
  margin-bottom: 2rem; }

.row {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-direction: normal;
  -webkit-box-orient: horizontal;
  -ms-flex-direction: row;
  flex-direction: row;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -ms-flex-line-pack: start;
  align-content: flex-start;
  -webkit-box-align: flex-center;
      -ms-flex-align: flex-center;
          align-items: flex-center;
  align-items: center;
  -webkit-box-align: center;
  -moz-box-align: center;
  -ms-flex-align: center;
  border-bottom: 1px solid #e6e6e6; }

.col {
  -webkit-box-flex: 0;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-align-self: auto;
  -ms-flex-item-align: auto;
  -ms-grid-row-align: auto;
      align-self: auto;
  -webkit-align-self: flex-auto;
  -ms-flex-item-align: auto;
  align-self: flex-auto;
  padding: 1rem;
  font-weight: 500;
  font-size: 1.2rem; }
  .col:nth-child(1) {
    width: 20%; }
  .col:nth-child(2) {
    width: 60%; }
  .col:nth-child(3) {
    width: 20%; }

.row__heading {
  background-color: #e6e6e6; }

.note__link:hover, .note__link:focus, .note__link:active {
  background-color: #475e86; }
  .note__link:hover .notes__cell, .note__link:focus .notes__cell, .note__link:active .notes__cell {
    color: #FFFFFF; }

.btn__group {
  overflow: auto; }

.note__container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-direction: normal;
  -webkit-box-orient: horizontal;
  -ms-flex-direction: row;
  flex-direction: row;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -ms-flex-line-pack: start;
  align-content: flex-start;
  align-items: flex-start;
  align-items: start;
  -webkit-box-align: start;
  -moz-box-align: start;
  -ms-flex-align: start;
  margin-bottom: 2rem; }

.note__thumb {
  -webkit-box-flex: 0;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-align-self: auto;
  -ms-flex-item-align: auto;
  -ms-grid-row-align: auto;
      align-self: auto;
  -webkit-align-self: flex-auto;
  -ms-flex-item-align: auto;
  align-self: flex-auto;
  border-radius: 10rem;
  overflow: hidden;
  width: 6rem;
  height: 6rem;
  margin-right: 2rem; }

.note__content {
  -webkit-box-flex: 1;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-align-self: auto;
  -ms-flex-item-align: auto;
  -ms-grid-row-align: auto;
      align-self: auto;
  -webkit-align-self: flex-auto;
  -ms-flex-item-align: auto;
  align-self: flex-auto;
  position: relative; }
  .note__content:before {
    content: '';
    width: 0;
    height: 0;
    border-top: 8px solid transparent;
    border-right: 10px solid #FFFFFF;
    border-bottom: 8px solid transparent;
    position: absolute;
    right: 100%;
    top: 1rem; }

.note__data {
  overflow: auto; }

.note__author {
  float: left;
  font-size: 1.2rem;
  font-weight: 500; }

.note__date {
  font-weight: 500;
  float: right;
  font-size: 1.2rem; }

.note__copy {
  margin-top: 1rem;
  font-size: 1.4rem;
  line-height: 1.3;
  clear: both; }

/*# sourceMappingURL=data:application/json;base64, */
